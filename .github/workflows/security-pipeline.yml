name: Snyk Security Scan with Gating

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Show current directory and files (Debug Step)
        run: |
          pwd
          ls -l
          ls -l ./todolist-goof
          ls -l ./log4shell-goof  

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Dependencies
        run: mvn install -DskipTests
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Snyk CLI
        run: npm install -g snyk
    
      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Run Snyk to check for vulnerabilities on all modules
        run: |
          # Run snyk test for each submodule explicitly and save combined JSON
          snyk test ./todolist-goof --json > snyk-todolist.json || true
          snyk test ./log4shell-goof --json > snyk-log4shell.json || true

          # Combine JSON reports into one file for parsing
          jq -s '{ vulnerabilities: map(.vulnerabilities) | add }' snyk-todolist.json snyk-log4shell.json > snyk-report.json
      
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Check JSON root type
        run: jq 'type' snyk-report.json
      - name: Parse Snyk results and gate build
        run: |
          echo "Parsing Snyk output for High and Critical vulnerabilities..."
          # Count high and critical vulnerabilities (root is array)
          HIGH_CRITICAL_COUNT=$(jq '[ .[] | select(.severity == "high" or .severity == "critical") ] | length' snyk-report.json)
          # Count medium vulnerabilities
          MEDIUM_COUNT=$(jq '[ .[] | select(.severity == "medium") ] | length' snyk-report.json)

          echo "ðŸŸ  Medium Vulnerabilities: $MEDIUM_COUNT"
          echo "ðŸ”´ High/Critical Vulnerabilities: $HIGH_CRITICAL_COUNT"

          if [ "$HIGH_CRITICAL_COUNT" -gt 0 ]; then
            echo "::error ::Found $HIGH_CRITICAL_COUNT High or Critical vulnerabilities. Failing the build."
            exit 1
          else
            echo "âœ… No High/Critical vulnerabilities. Build passes."
          fi
